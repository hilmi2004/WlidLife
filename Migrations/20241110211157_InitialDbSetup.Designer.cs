// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WlidLife.dData;

#nullable disable

namespace WlidLife.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241110211157_InitialDbSetup")]
    partial class InitialDbSetup
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WlidLife.Models.Animals", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CaretakerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<bool>("EndangeredStatus")
                        .HasColumnType("bit");

                    b.Property<string>("Habitat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CaretakerId");

                    b.ToTable("Animals");
                });

            modelBuilder.Entity("WlidLife.Models.Caretaker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AssignedAnimals")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specialization")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Caretaker");
                });

            modelBuilder.Entity("WlidLife.Models.FeedingSchedule", b =>
                {
                    b.Property<int>("FeedingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeedingId"));

                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.Property<int>("AnimalsId")
                        .HasColumnType("int");

                    b.Property<int>("CaretakerId")
                        .HasColumnType("int");

                    b.Property<string>("DietRequirements")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FeedingTimes")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.HasKey("FeedingId");

                    b.HasIndex("AnimalsId");

                    b.HasIndex("CaretakerId");

                    b.ToTable("FeedingSchedules");
                });

            modelBuilder.Entity("WlidLife.Models.Animals", b =>
                {
                    b.HasOne("WlidLife.Models.Caretaker", null)
                        .WithMany("Animals")
                        .HasForeignKey("CaretakerId");
                });

            modelBuilder.Entity("WlidLife.Models.FeedingSchedule", b =>
                {
                    b.HasOne("WlidLife.Models.Animals", "Animals")
                        .WithMany()
                        .HasForeignKey("AnimalsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WlidLife.Models.Caretaker", "Caretaker")
                        .WithMany()
                        .HasForeignKey("CaretakerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animals");

                    b.Navigation("Caretaker");
                });

            modelBuilder.Entity("WlidLife.Models.Caretaker", b =>
                {
                    b.Navigation("Animals");
                });
#pragma warning restore 612, 618
        }
    }
}
